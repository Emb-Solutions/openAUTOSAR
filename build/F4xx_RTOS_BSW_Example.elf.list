
F4xx_RTOS_BSW_Example.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000000  08000000  08000000  00010030  2**0
                  CONTENTS
  1 .text         00000030  08000000  08000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000030  08000030  00010030  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .data         00000000  20000000  20000000  00010030  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000000  20000000  08000030  00000000  2**0
                  ALLOC
  5 ._user_heap_stack 00000600  20000000  08000030  00020000  2**0
                  ALLOC
  6 .ARM.attributes 00000030  00000000  00000000  00010030  2**0
                  CONTENTS, READONLY
  7 .debug_info   00000685  00000000  00000000  00010060  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000131  00000000  00000000  000106e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_aranges 00000040  00000000  00000000  00010816  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_macro  0000d2cf  00000000  00000000  00010856  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   0000027e  00000000  00000000  0001db25  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_str    000501fa  00000000  00000000  0001dda3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .comment      00000059  00000000  00000000  0006df9d  2**0
                  CONTENTS, READONLY
 14 .debug_frame  0000006c  00000000  00000000  0006dff8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000000 <main>:
#include "main.h"

int main(void)
{
 8000000:	b480      	push	{r7}
 8000002:	af00      	add	r7, sp, #0



    while(1)
 8000004:	e7fe      	b.n	8000004 <main+0x4>

08000006 <NMI_Handler>:
    }
    return 0;
}

void  NMI_Handler(void)
{
 8000006:	b480      	push	{r7}
 8000008:	af00      	add	r7, sp, #0
    while(1)
 800000a:	e7fe      	b.n	800000a <NMI_Handler+0x4>

0800000c <Reset_Handler>:
{
    .Reset_Handler = &Reset_Handler
};

void Reset_Handler(void)
{
 800000c:	b580      	push	{r7, lr}
 800000e:	af00      	add	r7, sp, #0



main();
 8000010:	f7ff fff6 	bl	8000000 <main>
    
}
 8000014:	bf00      	nop
 8000016:	bd80      	pop	{r7, pc}

08000018 <_init>:
 8000018:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800001a:	bf00      	nop
 800001c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800001e:	bc08      	pop	{r3}
 8000020:	469e      	mov	lr, r3
 8000022:	4770      	bx	lr

08000024 <_fini>:
 8000024:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000026:	bf00      	nop
 8000028:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800002a:	bc08      	pop	{r3}
 800002c:	469e      	mov	lr, r3
 800002e:	4770      	bx	lr
